/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

#define KW_FRSH    LG(LS(R))           // browser refresh
#define KW_DEVT    LG(LA(I))           // browser dev tools
#define KW_EMOJ    LG(LC(SPACE))       // macos emoji picker
#define KW_MOOM    LG(LC(M))           // moom window management
#define KW_WINF    LG(GRAVE)           // cmd+` (macos, next window of current app)
#define KW_WINB    LG(TILDE)           // cmd+~ (macos, prev window of current app)

#define WORD_L     LA(LEFT)            // alt+left (word left, macos/emacs)
#define WORD_R     LA(RIGHT)           // alt+right (word right, macos/emacs)

#define KW_SCR3    LG(LS(N3))          // screenshot (macos)
#define KW_SCR4    LG(LS(N4))          // screenshot (region, macos)
#define KW_SCR5    LG(LS(N5))          // screenshot (window/etc..., macos)

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
// &lt { quick_tap_ms = <200>; };

/ {

    macros {
        ZMK_MACRO(esc_bslash,
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = <&kp ESC>, <&kp BACKSLASH>;
        )
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
            // ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
                 &kp ESC      &kp TAB      &kp Z        &kp P        &kp Y            &kp F        &kp G        &kp C        &kp R        &kp L
                 &kp A        &kp O        &kp E        &kp U        &kp I            &kp D        &kp H        &kp T        &kp N        &kp S
                 &kp LCMD     &kp Q        &kp J        &kp K        &kp X            &kp B        &kp M        &kp W        &kp V        &kp RALT
            // ╰────────────┴────────────┴────────────╮                                                       ╭────────────┴────────────┴────────────╯
                                                       &kp LCTRL  &lt LOWER SPACE    &lt RAISE RET  &kp RSHIFT
            //                                        ╰────────────┴────────────╯   ╰────────────┴────────────╯

            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
            // ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
                 &kp PG_UP    &kp WORD_L   &kp UP       &kp WORD_R   &kp HOME         &kp DEL      &kp N7       &kp N8       &kp N9       &kp BACKSPACE
                 &kp PG_DN    &kp LEFT     &kp DOWN     &kp RIGHT    &kp END          &kp KW_EMOJ  &kp N4       &kp N5       &kp N6       &esc_bslash
                 &trans       &kp KW_WINB  &kp KW_MOOM  &kp KW_WINF  &kp KW_FRSH      &kp KW_DEVT  &kp N1       &kp N2       &kp N3       &trans
            // ╰────────────┴────────────┴────────────╮                                                       ╭────────────┴────────────┴────────────╯
                                                        &trans       &trans           &kp N0       &trans
            //                                        ╰────────────┴────────────╯   ╰────────────┴────────────╯
            >;
        };

        raise_layer {
            label = "Raise";
            bindings = <
            // ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
                 &kp EXCL     &kp AT       &kp POUND    &kp PERCENT  &kp COMMA        &kp DOT       &kp AMPS    &kp STAR     &kp PLUS     &kp BACKSPACE
                 &kp CARET    &kp GRAVE    &kp TILDE    &kp DOLLAR   &kp APOS         &kp COLON     &kp SLASH   &kp EQUAL    &kp BSLSH    &kp MINUS
                 &trans       &kp LBRC     &kp LBKT     &kp LPAR     &kp LT           &kp GT        &kp RPAR    &kp RBKT     &kp RBRC     &trans
            // ╰────────────┴────────────┴────────────╮                                                       ╭────────────┴────────────┴────────────╯
                                                        &trans       &mo ADJUST       &trans        &trans
            //                                        ╰────────────┴────────────╯   ╰────────────┴────────────╯
            >;
        };

        adjust_layer {
            label = "Adjust";
            bindings = <
            // ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
                 &kp F1       &kp F2       &kp F3       &kp F4      &kp C_VOL_UP      &kp INS       &kp PSCRN     &kp SLCK      &kp PAUSE_BREAK  &bt BT_CLR
                 &kp F5       &kp F6       &kp F7       &kp F8      &kp C_VOL_DN      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4
                 &kp F9       &kp F10      &kp F11      &kp F12     &kp C_PP          &kp KW_SCR3   &kp KW_SCR4   &kp KW_SCR5   &trans           &trans
            // ╰────────────┴────────────┴────────────╮                                                       ╭────────────┴────────────┴────────────╯
                                                        &trans       &trans           &trans       &trans
            //                                        ╰────────────┴────────────╯   ╰────────────┴────────────╯
            >;
        };
    };
};
